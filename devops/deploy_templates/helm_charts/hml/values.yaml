imagePullSecrets: []
nameOverride: ""
fullnameOverride: "sgcf-frontend"

deployment:
  replicaCount: 1
  ports:
    - containerPort: 80
      protocol: TCP
  livenessProbe: {}
  readinessProbe: {}
  image:
    repository: docker.mj.gov.br/fabrica/sgcf/frontend
    pullPolicy: Always
    tag: "latest"
  env:
    - name: API_URL
      value: "/api"
    - name: SSO_URL
      value: "https://staging-sso.mj.gov.br/auth"
    - name: SSO_CLIENT_ID
      value: "sgcf-frontend"
    - name: SSO_REALM
      value: "MJ"
    - name: BASE_URL
      value: "sgcf-hml"
    - name: AMBIENTE
      value: "hml"
    - name: APP_ENV
      value: "hml"

configMaps: []

serviceAccount:
  create: false
  annotations: {}
  name: ""


route:
  kind: Ingress
  name: sgcf-frontend
  path: '/'
  port: 80
  host: hmlsgcf.mj.gov.br
  annotations:
    kubernetes.io/ingress.class: nginx-internal
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 80
  name: 80-tcp
  # annotations:
    # service.beta.kubernetes.io/azure-load-balancer-internal: 'true'

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 400
  targetMemoryUtilizationPercentage: 400

nodeSelector: {}

tolerations: []

affinity: {}
